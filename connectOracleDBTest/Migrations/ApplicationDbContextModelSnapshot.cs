// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using connectOracleDBTest.Data;

#nullable disable

namespace connectOracleDBTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("VIETHADEV")
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("connectOracleDBTest.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(25 BYTE)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("Gender")
                        .HasColumnType("NUMBER(1,0)")
                        .HasColumnName("GENDER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("FULL_NAME");

                    b.Property<long>("Offset")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSET");

                    b.Property<short>("Partition")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITION");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("PHONE_NUMBER");

                    b.HasKey("Id");

                    b.ToTable("CUSTOMER", "VIETHADEV");
                });

            modelBuilder.Entity("connectOracleDBTest.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("ORDER_ID");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<long>("Offset")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSET");

                    b.Property<short>("Partition")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITION");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(1,0)")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("NUMBER(8,2)")
                        .HasColumnName("TOTAL_AMOUNT");

                    b.HasKey("Id");

                    b.ToTable("ORDERS", "VIETHADEV");
                });

            modelBuilder.Entity("connectOracleDBTest.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR2(5 BYTE)")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50 BYTE)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(20 BYTE)")
                        .HasColumnName("PRODUCT_NAME");

                    b.Property<long>("Offset")
                        .HasColumnType("NUMBER(19,0)")
                        .HasColumnName("OFFSET");

                    b.Property<short>("Partition")
                        .HasColumnType("NUMBER(5,0)")
                        .HasColumnName("PARTITION");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMBER(8,2)")
                        .HasColumnName("PRICE");

                    b.Property<int>("Quantity")
                        .HasColumnType("NUMBER(8,0)")
                        .HasColumnName("QUANTITY");

                    b.HasKey("Id");

                    b.ToTable("PRODUCT", "VIETHADEV");
                });
#pragma warning restore 612, 618
        }
    }
}
